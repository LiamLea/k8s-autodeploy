- hosts: localhost
  gather_facts: True
  tasks:
  - name: install kubeadm
    apt:
      name: "kubeadm={{ kubernetes.version }}-00"
      state: present
      update_cache: yes
  - name: get k8s images
    shell: "kubeadm config images list --kubernetes-version={{ kubernetes.version}} --image-repository={{ kubernetes.repository }}"
    register: result1

  - name: include vars
    include_vars:
      dir: ../roles/k8s/defaults
  - name: select calico version
    set_fact:
      result: "{% for c_v in calico_k8s %} {% for k_v in calico_k8s[c_v]['k8s'] %} {% if k_v in kubernetes.version %} {{ c_v }} {% endif %} {% endfor %}{% endfor %}"
  - name: select calico version
    set_fact:
      calico_version: "{{ result | trim | string }}"

  - name: include template storage class
    include_tasks: ../roles/storage-class/tasks/template.yaml

  - name: include template certmanager
    include_tasks: ../roles/cert-manager/tasks/template.yaml

  - name: include template ingress nginx
    include_tasks: ../roles/ingress-nginx/tasks/template.yaml

  - name: include template prometheus
    include_tasks: ../roles/prometheus/tasks/template_prometheus.yaml

  - name: include template elastic
    include_tasks: ../roles/elastic/tasks/template_elastic.yaml

  - name: include template kafka
    include_tasks: ../roles/kafka/tasks/template_kafka.yaml

  - name: include template mysql
    include_tasks: ../roles/mysql/tasks/template_mysql.yaml

  - name: include template pgsql
    include_tasks: ../roles/postgresql/tasks/template_postgresql.yaml

  - name: include template redis
    include_tasks: ../roles/redis/tasks/template_redis.yaml

  - name: include template tools
    include_tasks: ../roles/tools/tasks/template_tools.yaml

  - name: include template jenkins
    include_tasks: ../roles/jenkins/tasks/template.yaml

  - name: include template argocd
    include_tasks: ../roles/argocd/tasks/template.yaml

  - name: include template elastalert
    include_tasks: ../roles/elastalert/tasks/template.yaml

  - name: include template jaeger
    include_tasks: ../roles/jaeger/tasks/template.yaml

  - name: include template opentelemetry
    include_tasks: ../roles/opentelemetry/tasks/template.yaml

  - name: include template istio
    include_tasks: ../roles/istio/tasks/template.yaml

  - name: set images
    set_fact:
      my_dict:
        k8s: "{{ result1.stdout.split('\n') + [kubernetes.backup.image] }}"
        others:
        - "{{ nginx.image }}"
        - "{{ keepalived.image }}"
        - "{{ docker.containerd.sandbox_image }}"
        calico: "{{ calico_k8s[calico_version]['images'] }}"
        storage_class: "{{ sc_images | unique }}"
        certmanager: "{{ certmanager_images | unique }}"
        ingress_nginx: "{{ ingress_nginx_images | unique }}"
        prometheus: "{{ prometheus_images | unique }}"
        elastic: "{{ elastic_images | unique }}"
        kafka: "{{ kafka_images | unique }}"
        mysql: "{{ mysql_images | unique }}"
        pgsql: "{{ pgsql_images | unique }}"
        redis: "{{ redis_images | unique }}"
        tools: "{{ tools_images | unique }}"
        jenkins: "{{ jenkins_images | unique }}"
        argocd: "{{ argocd_images | unique }}"
        elastalert: "{{ elastalert_images | unique }}"
        jaeger: "{{ jaeger_images | unique }}"
        opentelemetry: "{{ opentelemetry_images | unique }}"
        istio: "{{ istio_images | unique }}"

  - name: list_images
    debug:
      msg: "{{ my_dict }}"
