- name: set fact
  set_fact:
    __path: ""
    __kafka: "{{ log.kafka.bootstrap_servers }}"

- name: set proxy fact
  set_fact:
    __proxy_env:
      HTTP_PROXY: "{{ chart.http_proxy.server }}"
      HTTPS_PROXY: "{{ chart.http_proxy.server }}"
      NO_PROXY: "{{ chart.http_proxy.no_proxy }}"
  when: chart.http_proxy.enabled == True

- block:
  - name: copy charts
    copy:
      src: "{{ chart.local_dir.rstrip('/') }}/"
      dest: "/tmp/"
      force: true
  - name: set fact
    set_fact:
      __path: "/tmp/"
  when: chart.local_dir.strip() != ""

- block:
  - name: set kafka fact
    set_fact:
      __kafka: ["{{ service.kafka.name }}.{{ service.namespace}}:9092"]
  - name: include kafka role
    include_role:
      name: kafka
  when: log.kafka.enabled

- name: set fact
  set_fact:
    __kibana_hosts: []
    __kibana_ingress_hosts: []

- name: set __kibana_hosts fact
  set_fact:
    __kibana_hosts: "{{ __kibana_hosts + [(ingress.hosts['kibana']['host'] + '.' + item).strip('.')] }}"
  with_items: "{{ ingress.hosts['kibana']['domains'] }}"

- name: set __kibana_ingress_hosts fact
  set_fact:
    __kibana_ingress_hosts: "{{ __kibana_ingress_hosts + [{'host': item,'paths': [{'path': ingress.hosts['kibana']['path']}] }] }}"
  with_items: "{{ __kibana_hosts }}"

- name: set volumes fact
  set_fact:
    __volumes: []
    __volumeMounts: []
- name: set volumes fact
  set_fact:
    __volumes: "{{ __volumes | default([]) +  [{'name': item['name'],'hostPath': { 'path': item['hostPath']}}] }}"
    __volumeMounts: "{{ __volumeMounts | default([]) +  [{'name': item['name'],'mountPath': item['mountPath']}] }}"
  with_items: "{{ log.elastic.filebeat.volumes }}"

- name: setup elastic
  include_tasks: setup_elastic.yaml
