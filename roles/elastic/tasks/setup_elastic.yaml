- name: create ns
  shell: kubectl create ns {{ log.namespace }}
  ignore_errors: True

- name: copy files
  copy:
    src: secrets.yaml
    dest: /tmp/
    force: yes

- name: apply secret
  shell: "kubectl apply -f /tmp/secrets.yaml -n {{ log.namespace }}"

- name: install elasticsearch
  environment: "{{ __proxy_env | default(omit) }}"
  kubernetes.core.helm:
    wait: yes
    wait_timeout: 20m0s
    chart_ref: "{{ __path }}{{ log.elastic.elasticsearch.chart.path }}"
    chart_repo_url: "{{ log.elastic.elasticsearch.chart.repo }}"
    chart_version: "{{ log.elastic.version }}"
    release_name: "{{ log.elastic.elasticsearch.name }}"
    release_namespace: "{{ log.namespace }}"
    create_namespace: yes
    atomic: yes
    release_values:
      image: "{{ log.repository }}docker.elastic.co/elasticsearch/elasticsearch"
      resources:
        requests: "{{ log.elastic.elasticsearch.resources.requests }}"
        limits: "{{ log.elastic.elasticsearch.resources.limits }}"
      volumeClaimTemplate:
        resources:
          requests:
            storage: "{{ log.elastic.elasticsearch.resources.storage }}"
      esJavaOpts: "{{ log.elastic.elasticsearch.resources.esJavaOpts }}"
      esConfig:
        elasticsearch.yml: |
          xpack.security.enabled: true
          xpack.security.transport.ssl.enabled: true
          xpack.security.transport.ssl.verification_mode: none
          xpack.security.transport.ssl.key: /usr/share/elasticsearch/config/certs/server.key
          xpack.security.transport.ssl.certificate: /usr/share/elasticsearch/config/certs/server.crt
      extraEnvs:
      - name: ELASTIC_PASSWORD
        value: "{{ log.elastic.security.password }}"
      - name: ELASTIC_USERNAME
        value: elastic
      secretMounts:
        - name: elastic-certificates
          secretName: elastic-certificates
          path: /usr/share/elasticsearch/config/certs

- name: install kibana
  environment: "{{ __proxy_env | default(omit) }}"
  kubernetes.core.helm:
    chart_ref: "{{ __path }}{{ log.elastic.kibana.chart.path }}"
    chart_repo_url: "{{ log.elastic.kibana.chart.repo }}"
    chart_version: "{{ log.elastic.version }}"
    release_name: "{{ log.elastic.kibana.name }}"
    release_namespace: "{{ log.namespace }}"
    create_namespace: yes
    atomic: yes
    release_values:
      image: "{{ log.repository }}docker.elastic.co/kibana/kibana"
      healthCheckPath: "{{ ingress.hosts.kibana.path }}/app/kibana"
      kibanaConfig:
        kibana.yml: "{{ __config_kibana }}"
      extraEnvs:
        - name: 'ELASTICSEARCH_USERNAME'
          value: "elastic"
        - name: 'ELASTICSEARCH_PASSWORD'
          value: "{{ log.elastic.security.password }}"
      ingress:
        enabled: "{{ ingress.enabled }}"
        annotations:
          cert-manager.io/cluster-issuer: "{{ ingress.cluster_issuer }}"
        className: "{{ ingress.class_name }}"
        pathtype: Prefix
        hosts: "{{ __kibana_ingress_hosts }}"
        tls:
        - secretName: "kibana-ingress-secret"
          hosts: "{{ __kibana_hosts }}"

- name: init elastic
  include_tasks: init.yaml

- name: install logstash
  environment: "{{ __proxy_env | default(omit) }}"
  kubernetes.core.helm:
    chart_ref: "{{ __path }}{{ log.elastic.logstash.chart.path }}"
    chart_repo_url: "{{ log.elastic.logstash.chart.repo }}"
    chart_version: "{{ log.elastic.version }}"
    release_name: "{{ log.elastic.logstash.name }}"
    release_namespace: "{{ log.namespace }}"
    create_namespace: yes
    atomic: yes
    release_values:
      image: "{{ log.repository }}docker.elastic.co/logstash/logstash"
      replicas: "{{ log.elastic.logstash.replicas }}"
      resources:
        requests: "{{ log.elastic.logstash.resources.requests }}"
        limits: "{{ log.elastic.logstash.resources.limits }}"
      logstashJavaOpts: "{{ log.elastic.logstash.resources.logstashJavaOpts }}"
      logstashConfig:
        logstash.yml: "{{ __config_logstash }}"
      logstashPipeline:
        logstash.conf: "{{ __config_logstash_conf }}"

- name: install filebeat
  environment: "{{ __proxy_env | default(omit) }}"
  kubernetes.core.helm:
    chart_ref: "{{ __path }}{{ log.elastic.filebeat.chart.path }}"
    chart_repo_url: "{{ log.elastic.filebeat.chart.repo }}"
    chart_version: "{{ log.elastic.version }}"
    release_name: "{{ log.elastic.filebeat.name }}"
    release_namespace: "{{ log.namespace }}"
    create_namespace: yes
    atomic: yes
    release_values:
      image: "{{ log.repository }}docker.elastic.co/beats/filebeat"
      daemonset:
        tolerations:
        - operator: "Exists"
        filebeatConfig:
          filebeat.yml: "{{ __config_filebeat }}"
        resources:
          requests:
            cpu: "100m"
            memory: "500Mi"
          limits:
            cpu: "1000m"
            memory: "500Mi"
        extraVolumes: "{{ __volumes }}"
        extraVolumeMounts: "{{ __volumeMounts }}"
