- name: set fact
  set_fact:
    __path: ""

- name: set proxy fact
  set_fact:
    __proxy_env:
      HTTP_PROXY: "{{ chart.http_proxy.server }}"
      HTTPS_PROXY: "{{ chart.http_proxy.server }}"
      NO_PROXY: "{{ chart.http_proxy.no_proxy }}"
  when: chart.http_proxy.enabled == True

- block:
  - name: copy charts
    copy:
      src: "{{ chart.local_dir.rstrip('/') }}/"
      dest: "/tmp/"
      force: true
  - name: set fact
    set_fact:
      __path: "/tmp/"
  when: chart.local_dir.strip() != ""

- name: set fact
  set_fact:
    __node_exporter: "{{ monitor.prometheus.config.node_exporter }}"
    __http_probe: "{{ monitor.prometheus.config.http_probe }}"
    __etcd: []
    __prometheus_hosts: []
    __alertmanager_hosts: []
    __grafana_hosts: []

- name: set __node_exporter fact
  set_fact:
    __node_exporter: "{{ __node_exporter | default([]) + [hostvars[item]['ansible_host'] + ':' + (monitor['node_exporter']['port']|string)] }}"
  when: item not in groups['monitor_exceptions']
  with_items: "{{ groups['all'] }}"

- name: set __http_probe fact
  set_fact:
    __http_probe: "{{ __http_probe | default([]) + [hostvars[item]['ansible_host'] + ':' + (log['elastic']['filebeat']['http_port']|string)] }}"
  when: item not in groups['monitor_exceptions'] and log.elastic.filebeat.http_probe
  with_items: "{{ groups['all'] }}"

- name: set __etcd fact
  set_fact:
    __etcd: "{{ __etcd | default([]) + [hostvars[item]['ansible_host'] + ':2381'] }}"
  with_items: "{{ groups['master'] }}"

- name: set __prometheus_hosts fact
  set_fact:
    __prometheus_hosts: "{{ __prometheus_hosts + [(ingress.hosts['prometheus']['host'] + '.' + item).strip('.')] }}"
  with_items: "{{ ingress.hosts['prometheus']['domains'] }}"

- name: set __alertmanager_hosts fact
  set_fact:
    __alertmanager_hosts: "{{ __alertmanager_hosts + [(ingress.hosts['alertmanager']['host'] + '.' + item).strip('.')] }}"
  with_items: "{{ ingress.hosts['alertmanager']['domains'] }}"

- name: set __grafana_hosts fact
  set_fact:
    __grafana_hosts: "{{ __grafana_hosts + [(ingress.hosts['grafana']['host'] + '.' + item).strip('.')] }}"
  with_items: "{{ ingress.hosts['grafana']['domains'] }}"

- name: setup prometheus
  include_tasks: setup_prometheus.yaml
