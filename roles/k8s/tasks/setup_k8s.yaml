- name: set sysctl
  sysctl:
    name: "{{ item }}"
    value: '1'
  with_items:
  - "net.ipv4.ip_forward"
  - "net.bridge.bridge-nf-call-iptables"
  - "net.bridge.bridge-nf-call-ip6tables"

- name: check k8s cluster
  shell: ss -tulnp src :10250 | grep 10250
  ignore_errors: True
  register: k8s_setup

- name: set variable init_master
  set_fact:
    init_master: "{{ groups['master'][0] }}"
#    init_master: "{%- set myList = [] -%} {%- for i in groups.master -%} {{ myList.append({'name': i, 'priority': hostvars[i]['ansible_host'].split('.')[-1] | int}) }} {%- endfor -%} {{ (myList | sort(attribute='priority') | last)['name'].strip() }}"

- block:

  - name: copy kubeadm conf
    template:
      src: kubeadm.conf.j2
      dest: /etc/kubernetes/kubeadm.conf

  - name: init first master
    shell: |
      kubeadm init --config /etc/kubernetes/kubeadm.conf
      mkdir ~/.kube || echo ""
      cp -f /etc/kubernetes/admin.conf ~/.kube/config

  - name: select calico version
    set_fact:
      result: "{% for c_v in calico_k8s %} {% for k_v in calico_k8s[c_v]['k8s'] %} {% if k_v in kubernetes.version %} {{ c_v }} {% endif %} {% endfor %}{% endfor %}"
  - name: select calico version
    set_fact:
      calico_version: "{{ result | trim }}"

  - name: stop install calico
    fail:
      msg: "there's no appropriate version of calico for the k8s version!!"
    when: calico_version == ""

  - name: install calico
    include_tasks: "calico_{{ calico_version }}.yaml"

  when: k8s_setup.rc != 0 and inventory_hostname == init_master

- name: get join command
  shell: kubeadm token create --print-join-command
  register: join_command
  when: inventory_hostname == init_master

- name: get cert key
  shell: kubeadm init phase upload-certs --upload-certs | tail -1
  register: cert_key
  when: inventory_hostname == init_master

- name: init other master
  shell: |
    {{ hostvars[init_master]['join_command'].stdout }} --certificate-key {{ hostvars[init_master]['cert_key'].stdout }} --control-plane --apiserver-advertise-address={{ ansible_host }} --apiserver-bind-port=6443 --cri-socket unix:///run/containerd/containerd.sock  || exit 1
    mkdir ~/.kube || echo ""
    cp -f /etc/kubernetes/admin.conf ~/.kube/config || echo ""
  throttle: 1
  when: k8s_setup.rc != 0 and inventory_hostname in groups["master"] and inventory_hostname != init_master

- name: init node
  shell: "{{ hostvars[init_master]['join_command'].stdout }} --cri-socket unix:///run/containerd/containerd.sock"
  when: k8s_setup.rc != 0 and inventory_hostname in groups["node"]
