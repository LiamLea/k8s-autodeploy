apiVersion: jaegertracing.io/v1
kind: Jaeger
metadata:
  name: {{ service_mesh.jaeger.name }}
spec:
  strategy: production
  collector:
    maxReplicas: {{ service_mesh.jaeger.collector.max_replicas }}
    resources: {{ service_mesh.jaeger.collector.resources }}
    image: {{ service_mesh.repository }}jaegertracing/jaeger-collector:{{ service_mesh.jaeger.version }}
  storage:
    type: elasticsearch
    options:
      es:
        server-urls: {{ service_mesh.jaeger.elasticsearch.url }}
        index-prefix: {{ service_mesh.jaeger.elasticsearch.index_prefix }}
        username: {{ service_mesh.jaeger.elasticsearch.username }}
        password: {{ service_mesh.jaeger.elasticsearch.password }}
  query:
    options:
      query:
        base-path: /jaeger
      prometheus:
        server-url: "{{ service_mesh.jaeger.prometheus }}"
    metricsStorage:
      type: prometheus
    image:
      {{ service_mesh.repository }}jaegertracing/jaeger-query:{{ service_mesh.jaeger.version }}
  agent:
    image:
      {{ service_mesh.repository }}jaegertracing/jaeger-agent:{{ service_mesh.jaeger.version }}
  ingress:
    hosts: {{ __jaeger_hosts }}
    ingressClassName: "{{ ingress.class_name }}"
    annotations:
      cert-manager.io/cluster-issuer: {{ ingress.cluster_issuer }}
