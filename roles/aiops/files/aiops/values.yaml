mysql:
  ip: tidb-cluster-tidb.tidb-aiops
  port: 4000
  db_name: aiops_dev
  username: kangpaas
  password: kangpaas

redis:
  host: redis-master.redis
  port: 6379
  database: 1
  password: cangoal

scan:
  version: 2.0.8
  imagePullPolicy: Always
  repository: docker.repo.local:5000/aiops/scripts
  resources:
    requests:
      cpu: 10000m
      memory: 1Gi
    limits:
      cpu: 32000m
      memory: 8Gi

cleaning_service:
  version: 2.0.8
  imagePullPolicy: Always
  repository: docker.repo.local:5000/aiops/data-cleaning
  resources:
    requests:
      cpu: 1000m
      memory: 1Gi
    limits:
      cpu: 16000m
      memory: 4Gi

kafka:
  host: kafka.kafka
  port: 9092

url:
  host: aiops.system.com
  system: aiops-system
  cn: aiops.system.com
  clusterissuer: ca-issuer

kangpaas:
  version: 2.0.8
  imagePullPolicy: Always
  imagePullSecrets: my-harbor
  eureka:
    repository: docker.repo.local:5000/aiops/eureka
    resources:
      requests: 
        memory: 512Mi
      limits: 
        memory: 1024Mi
  gate:
    repository: docker.repo.local:5000/aiops/gate
    resources:
      requests: 
        memory: 2Gi
      limits: 
        memory: 2.2Gi
  oauth:
    repository: docker.repo.local:5000/aiops/oauth
    resources:
      requests: 
        memory: 512Mi
      limits: 
        memory: 1024Mi
  websocket:
    repository: docker.repo.local:5000/aiops/websocket
    resources:
      requests: 
        memory: 2Gi
      limits: 
        memory: 2.2Gi
  job:
    repository: docker.repo.local:5000/aiops/job
    resources:
      requests: 
        memory: 512Mi
      limits: 
        memory: 1024Mi
  systemmgnt:
    repository: docker.repo.local:5000/aiops/systemmgnt
    resources:
      requests: 
        memory: 512Mi
      limits: 
        memory: 1024Mi
  standingbook:
    repository: docker.repo.local:5000/aiops/standingbook
    resources:
      requests: 
        memory: 4Gi
      limits: 
        memory: 5Gi
  monitormgnt:
    repository: docker.repo.local:5000/aiops/monitormgnt
    resources:
      requests: 
        memory: 4Gi
      limits: 
        memory: 5Gi

vantiq:
  token: _f67RoN6baxHjw0kCWOTIIVuOTNv2cww6l1AEbTYIfU=

front:
  image:
    repository: docker.repo.local:5000/jibei/front
    tag: 2.0.8
    pullPolicy: Always
    pullSecrets: my-harbor

  config:
    config.js: |
      window.g = {
        ApiUrl: 'https://aiops.system.com:30443/gate',
        WSIP: 'wss://aiops.system.com:30443/websocket',
        RegistCenter:"http://kangpaas-eureka:8091/",
        isShowErrMsg: true,
        Apis: 'https://aiops.system.com:30443',
        vantiq: 'https://aiops.system.com:30443/data-cleaning',
        vantiq_token: 'Bearer _f67RoN6baxHjw0kCWOTIIVuOTNv2cww6l1AEbTYIfU=',
        contract: 'https://aiops.system.com:30443/contract', // 运营中心
        alert_mgnt: "https://aiops.system.com:30443/prometheus-mgnt",
        message: 'https://aiops.system.com:30443/message-mgnt', // 消息
      }
