- name: set fact
  set_fact:
    __path: ""

- name: set proxy fact
  set_fact:
    __proxy_env:
      HTTP_PROXY: "{{ chart.http_proxy.server }}"
      HTTPS_PROXY: "{{ chart.http_proxy.server }}"
      NO_PROXY: "{{ chart.http_proxy.no_proxy }}"
  when: chart.http_proxy.enabled == True

- block:
  - name: copy charts
    copy:
      src: "{{ chart.local_dir.rstrip('/') }}/"
      dest: "/tmp/"
      force: true
  - name: set fact
    set_fact:
      __path: "/tmp/"
  when: chart.local_dir.strip() != ""

- block:
  - name: download istioctl binaries
    unarchive:
      src: "https://github.com/istio/istio/releases/download/{{ service_mesh.istio.version }}/istioctl-{{ service_mesh.istio.version }}-linux-{{ go_arch }}.tar.gz"
      dest: "{{ service_mesh.istio.install_path }}"
      mode: 0755
      remote_src: yes
  when: service_mesh.istio.local_path.strip() == ""

- name: copy istioctl binaries
  copy:
    src: "{{ service_mesh.istio.local_path }}"
    dest: "{{ service_mesh.istio.install_path }}"
    mode: 0755
    force: yes
  when: service_mesh.istio.local_path.strip() != ""

- name: copy istio profile
  template:
    src: ../templates/profile.yaml.j2
    dest: /tmp/istio_profile.yaml

- name: template istio
  shell: "istioctl manifest generate -f /tmp/istio_profile.yaml | grep -v '{''{'"
  register: istio_template_result

- name: template kiali
  environment: "{{ __proxy_env | default(omit) }}"
  kubernetes.core.helm_template:
    chart_ref: "{{ __path }}{{ service_mesh.istio.kiali.chart.path }}"
    chart_repo_url: "{{ service_mesh.istio.kiali.chart.repo }}"
    chart_version: "{{ service_mesh.istio.kiali.chart.version }}"
    release_values:
      deployment:
        image_name: "{{ service_mesh.repository }}quay.io/kiali/kiali"
        image_pull_policy: "IfNotPresent"
  register: kiali_template_result

- name: set facts
  set_fact:
    istio_template_stdout: "{{ istio_template_result.stdout_lines + kiali_template_result.stdout_lines}}"

- name: get images
  set_fact:
    istio_images: "{{ istio_template_stdout | select('match', '.*image:.+') | list | regex_replace('[- ]*image: *', '') | replace('\"', '')}}"
