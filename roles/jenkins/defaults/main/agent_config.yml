__agent_config:
  enabled: true
  namespace: "{{ devops.namespace }}"
  command: ""
  args: ""
  customJenkinsLabels:
  - "k8s"
  image: "{{ devops.jenkins.agent.image }}"
  tag: "{{ devops.jenkins.agent.tag }}"
  envVars:
  - name: GIT_SSL_NO_VERIFY
    value: "1"
  runAsUser: 0
  runAsGroup: 0
  podRetention: "OnFailure"
  TTYEnabled: true
  disableDefaultAgent: "{{ devops.jenkins.agent.disableDefaultAgent }}"
  podTemplates:
    k8s: |
      - containers:
        - image: "{{ devops.jenkins.agent.image }}:{{ devops.jenkins.agent.tag }}"
          name: "jnlp"
          resourceLimitCpu: "512m"
          resourceLimitMemory: "512Mi"
          resourceRequestCpu: "512m"
          resourceRequestMemory: "512Mi"
          runAsGroup: "0"
          runAsUser: "0"
          ttyEnabled: true
          workingDir: "/home/jenkins/agent"
        - args: "9999999"
          command: "sleep"
          image: "{{ devops.jenkins.agent.maven.image }}:{{ devops.jenkins.agent.maven.tag }}"
          name: "maven"
          resourceLimitCpu: "1000m"
          resourceLimitMemory: "2Gi"
          resourceRequestCpu: "100m"
          resourceRequestMemory: "500Mi"
          runAsGroup: "0"
          runAsUser: "0"
          ttyEnabled: true
          workingDir: "/home/jenkins/agent"
        - args: "9999999"
          command: "sleep"
          image: "{{ devops.jenkins.agent.nodejs.image }}:{{ devops.jenkins.agent.nodejs.tag }}"
          name: "nodejs"
          resourceLimitCpu: "1000m"
          resourceLimitMemory: "2Gi"
          resourceRequestCpu: "100m"
          resourceRequestMemory: "500Mi"
          runAsGroup: "0"
          runAsUser: "0"
          ttyEnabled: true
          workingDir: "/home/jenkins/agent"
        envVars:
        - envVar:
            key: "GIT_SSL_NO_VERIFY"
            value: "1"
        id: "56834525030869b6fa3cb431fe5325d2eed589ee79f0273b3e78f75b8ac03a4f"
        label: "jenkins-jenkins-agent k8s"
        name: "default"
        namespace: "devops"
        nodeUsageMode: "NORMAL"
        podRetention: "onFailure"
        serviceAccount: "default"
        slaveConnectTimeout: 100
        slaveConnectTimeoutStr: "100"
        volumes:
        - hostPathVolume:
            hostPath: "/bin/docker"
            mountPath: "/bin/docker"
        - hostPathVolume:
            hostPath: "/var/run/docker.sock"
            mountPath: "/var/run/docker.sock"
        - configMapVolume:
            configMapName: "maven-config"
            mountPath: "/usr/share/maven/conf/settings.xml"
            subPath: "settings.xml"
        - persistentVolumeClaim:
            claimName: "maven-pvc"
            mountPath: "/root/.m2"
            readOnly: false
        - persistentVolumeClaim:
            claimName: "npm-pvc"
            mountPath: "/root/.npm"
            readOnly: false
        - persistentVolumeClaim:
            claimName: "cache-pvc"
            mountPath: "/usr/local/share/.cache"
            readOnly: false
        yamlMergeStrategy: "override"

  additionalContainers:
  - sideContainerName: maven
    image: "{{ devops.jenkins.agent.maven.image }}"
    tag: "{{ devops.jenkins.agent.maven.tag }}"
    command: "sleep"
    args: "9999999"
    resources:
      requests:
        cpu: 100m
        memory: 500Mi
      limits:
        cpu: 1000m
        memory: 2Gi
  - sideContainerName: nodejs
    image: "{{ devops.jenkins.agent.nodejs.image }}"
    tag: "{{ devops.jenkins.agent.nodejs.tag }}"
    command: "sleep"
    args: "9999999"
    resources:
      requests:
        cpu: 100m
        memory: 500Mi
      limits:
        cpu: 1000m
        memory: 2Gi
  volumes:
  - type: HostPath
    hostPath: /bin/docker
    mountPath: /bin/docker
  - type: HostPath
    hostPath: /var/run/docker.sock
    mountPath: /var/run/docker.sock
  - type: ConfigMap
    configMapName: maven-config
    subPath: settings.xml
    mountPath: /usr/share/maven/conf/settings.xml
  - type: PVC
    claimName: maven-pvc
    mountPath: /root/.m2
  - type: PVC
    claimName: npm-pvc
    mountPath: /root/.npm
  - type: PVC
    claimName: cache-pvc
    mountPath: /usr/local/share/.cache
