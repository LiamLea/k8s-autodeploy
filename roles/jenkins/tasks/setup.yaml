- name: create ns
  shell: kubectl create ns {{ devops.namespace }}
  ignore_errors: True

- name: template pvc yaml
  template:
    src: pvc.yaml.j2
    dest: /tmp/devops_jenkins_pvc.yaml

- name: template pvc yaml
  template:
    src: config.yaml.j2
    dest: /tmp/devops_jenkins_config.yaml

- name: apply pvc and config
  shell: "kubectl apply -f /tmp/devops_jenkins_pvc.yaml -f /tmp/devops_jenkins_config.yaml -n {{ devops.namespace }}"

- name: install jenkins
  environment: "{{ __proxy_env | default(omit) }}"
  kubernetes.core.helm:
    wait: yes
    wait_timeout: 10m0s
    chart_ref: "{{ __path }}{{ devops.jenkins.chart.path }}"
    chart_repo_url: "{{ devops.jenkins.chart.repo }}"
    chart_version: "{{ devops.jenkins.chart.version }}"
    release_name: "{{ devops.jenkins.name }}"
    release_namespace: "{{ devops.namespace }}"
    create_namespace: yes
    atomic: yes
    release_values:
      controller:
        image: "{{ devops.repository }}jenkins/jenkins"
        imagePullPolicy: "IfNotPresent"
        adminPassword: "{{ devops.jenkins.admin_password }}"
        containerEnv:
        - name: GIT_SSL_NO_VERIFY
          value: "1"
        resources:
          requests: "{{ devops.jenkins.resources.requests }}"
          limits: "{{ devops.jenkins.resources.limits }}"
        jenkinsUriPrefix: "{{ ingress.hosts['jenkins'].path }}"
        #install the latest plugins(you can speify the version, e.g. kubernetes:3734.v562b_b_a_627ea_c)
        additionalPlugins:
        - "blue ocean"
        - skip-certificate-check
        - timestamper
        initializeOnce: true
        JCasC:
          security:
            gitHostKeyVerificationConfiguration:
              sshHostKeyVerificationStrategy: "noHostKeyVerificationStrategy"
          updateCenter:
            sites:
            - id: "default"
              url: "https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json"
        ingress:
          enabled: true
          annotations:
            cert-manager.io/cluster-issuer: "{{ ingress.cluster_issuer }}"
          ingressClassName: "{{ ingress.class_name }}"
          path: "{{ ingress.hosts['jenkins'].path }}"
          hostName: "{{ __jenkins_hosts[0] }}"
          tls:
          - secretName: "jenkins-ingress-secret"
            hosts: "{{ __jenkins_hosts }}"
        testEnabled: false
        sidecars:
          configAutoReload:
            image: "{{ devops.repository }}kiwigrid/k8s-sidecar:1.15.0"
      agent: "{{ __agent_config }}"
      persistence:
        enabled: true
        storageClass: "{{ devops.storage_class }}"
        size: "{{ devops.jenkins.resources.storage }}"
