- name: exec debian tasks
  include_tasks: "debian.yaml"
  when: ansible_distribution_file_variety == "Debian"

- name: exec redhat tasks
  include_tasks: "redhat.yaml"
  when: ansible_distribution_file_variety == "RedHat"

- name: set sysctl
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
  with_items:
  - name: "fs.inotify.max_user_instances"
    value: 1024
  - name: "fs.inotify.max_user_watches"
    value: "1048576"

- name: Add or modify nofile soft limit for all
  community.general.pam_limits:
    domain: 'root'
    limit_type: soft
    limit_item: nofile
    value: 65535
- name: Add or modify nofile soft limit for all
  community.general.pam_limits:
    domain: 'root'
    limit_type: hard
    limit_item: nofile
    value: 65535
- name: Add or modify nofile soft limit for all
  community.general.pam_limits:
    domain: '*'
    limit_type: soft
    limit_item: nofile
    value: 65535
- name: Add or modify nofile soft limit for all
  community.general.pam_limits:
    domain: '*'
    limit_type: hard
    limit_item: nofile
    value: 65535

- name: time sync
  include_role:
    name: ntp

- name: set hostname
  hostname:
    name: "{{inventory_hostname}}"

- name: check timezone file
  stat:
    path: "/usr/share/zoneinfo/{{timezone}}"
  register: check_tz
- name: set timezone
  file:
    src: "/usr/share/zoneinfo/{{timezone}}"
    dest: "/etc/localtime"
    state: link
  when: check_tz.stat.exists

- name: set hosts
  template:
    src: hosts.j2
    dest: /etc/hosts
    owner: root
    group: root
    mode: 0644

- name: config  dns
  template:
    src: resolv.conf.j2
    dest: /etc/resolv.conf

- name: turn off swap
  shell: swapoff -a;sed -ri 's/(^[^[:space:]#]+\s+\S+\s+swap\s+)/#\1/' /etc/fstab

- block:
  - name: create directory ssh
    file:
      name: "~/.ssh"
      state: directory

  - name: copy id_rsa
    copy:
      src: id_rsa
      dest: "~/.ssh"
      mode: 0600
      force: yes

  - name: copy id_rsa.pub
    copy:
      src: id_rsa.pub
      dest: "~/.ssh"
      force: yes
  when: groups["master"] is defined and inventory_hostname in groups["master"]

- name: create directory ssh
  file:
    name: "/root/.ssh"
    state: directory

- name: copy authorized_keys
  copy:
    src: authorized_keys
    dest: "/root/.ssh"
  ignore_errors: True
